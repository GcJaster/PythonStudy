{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1NRbHoEFcUnVlSY0nt_05Ra3foRg2ws18","timestamp":1681931185865},{"file_id":"1ARjqv25pD7EJdBMg7d1LXx80gyQkswqj","timestamp":1681858816914}],"authorship_tag":"ABX9TyOixLKB2NkNDGz+fu6YgejK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Метод классификации на основе опорных векторов"],"metadata":{"id":"15XFrlGSWmL8"}},{"cell_type":"markdown","source":["Подключение библиотеки, загрузка датасета"],"metadata":{"id":"dNYk1aapWueG"}},{"cell_type":"code","source":["from sklearn import datasets\n","\n","from sklearn import svm\n","\n","iris= datasets.load_iris()\n","\n","print(iris.data.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nHPzFE6vdm-S","executionInfo":{"status":"ok","timestamp":1681846711438,"user_tz":-180,"elapsed":2241,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"524e9899-667f-4ebd-cf0f-69d3869a238d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(150, 4)\n"]}]},{"cell_type":"markdown","source":["Выбор метода машинного обучения, запуск процесса обучения и использования обученной модели"],"metadata":{"id":"yZ_X1DoxmHpi"}},{"cell_type":"code","source":["clf = svm.LinearSVC()\n","\n","# обучение\n","\n","clf.fit(iris.data, iris.target)\n","\n","# прогнозирование для входных данных\n","\n","result=clf.predict([[ 5.0, 3.6, 1.3, 0.25]])\n","\n","print(clf.classes_)\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4vu3pvHomJFZ","executionInfo":{"status":"ok","timestamp":1681846713453,"user_tz":-180,"elapsed":2,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"78fb71fd-1bdf-4332-f48e-928240503b1f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 2]\n","[0]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/sklearn/svm/_base.py:1244: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["result=clf.predict([[ 15.0, 13.6, 10.3, 10.25]])\n","\n","\n","print(clf.classes_)\n","\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DegABEdg3Nsu","executionInfo":{"status":"ok","timestamp":1681846716157,"user_tz":-180,"elapsed":2,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"704415e2-1498-4f97-93fd-1361d5fa8ec4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 2]\n","[2]\n"]}]},{"cell_type":"markdown","source":["Создание датасета для регрессии"],"metadata":{"id":"fKlOhcXk3UIE"}},{"cell_type":"code","source":["import numpy as np\n","from matplotlib import pyplot as plt\n","plt.style.use('ggplot')\n","%matplotlib inline\n","\n","n_points=100\n","X = np.linspace(-5, 5, n_points)\n","y = 10 * X - 7\n","\n","X_train = X[0::2].reshape(-1, 1)\n","y_train = y[0::2] + np.random.randn(int(n_points/2)) * 10\n","\n","X_test = X[1::2].reshape(-1, 1)\n","y_test = y[1::2] + np.random.randn(int(n_points/2)) * 10\n","\n","#визуализация данных\n","plt.figure(figsize=(10, 5))\n","plt.plot(X, y, label='real')\n","plt.scatter(X_train, y_train, label='train')\n","plt.scatter(X_test, y_test, label='test')\n","plt.legend(loc='best')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":445},"id":"uulv_k_X3V7T","executionInfo":{"status":"ok","timestamp":1681846719564,"user_tz":-180,"elapsed":1257,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"99f8483c-9dc7-4cbe-922f-587131459990"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Линейная регрессия"],"metadata":{"id":"Su-r_yMr4xDL"}},{"cell_type":"code","source":["from sklearn import linear_model\n","\n","reg = linear_model.LinearRegression()\n","\n","reg.fit(X_train, y_train)\n","\n","w=reg.coef_\n","\n","print(w)\n","\n","b=reg.intercept_\n","\n","\n","print(b)\n","result=reg.predict([[3]])\n","\n","\n","print(result)\n","\n","#визуализация\n","plt.figure(figsize=(10, 5))\n","plt.plot(X, y, label='real')\n","plt.scatter(X_train, y_train, label='train')\n","plt.scatter(X_test, y_test, label='test')\n","plt.plot(X[1::2], X[1::2].reshape(-1, 1).dot(w) + b, label='predicted')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497},"id":"F52SdRNg4xnh","executionInfo":{"status":"ok","timestamp":1681846722917,"user_tz":-180,"elapsed":1302,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"073d685c-2353-40e1-da41-483475554ad0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[9.63704569]\n","-7.232849824073158\n","[21.67828724]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Классификатор ближайшего соседа"],"metadata":{"id":"iokUg9q148vy"}},{"cell_type":"code","source":[" # Создание и обучение классификатора ближайшего соседа\n","\n","from sklearn import neighbors\n","\n","knn = neighbors.KNeighborsClassifier()\n","\n","knn.fit(iris.data, iris.target)\n","\n","# прогнозирование для входных данных\n","\n","result=knn.predict([[0.1, 0.2, 0.3, 0.4]])\n","\n","print(result)\n","\n","\n","\n","\n","result=knn.predict([[10.1, 10.2, 10.3, 10.4]])\n","\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-jQza0S44-au","executionInfo":{"status":"ok","timestamp":1681846724996,"user_tz":-180,"elapsed":281,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"58023721-eb0c-44a8-8d91-5cfecd1519a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0]\n","[2]\n"]}]},{"cell_type":"markdown","source":["Кластеризация методом к-средних"],"metadata":{"id":"fu2mZRsr5B2V"}},{"cell_type":"code","source":["from sklearn import cluster, datasets\n","\n","# задаем количество кластеров, равное 3\n","\n","k=3\n","\n","k_means = cluster.KMeans(k)\n","\n","# обучение\n","\n","k_means.fit(iris.data)\n","\n","# результат кластеризации\n","\n","print( k_means.labels_[::10])\n","\n","print( iris.target[::10])\n","\n","\n","result=k_means.predict([[ 15.0, 13.6, 11.3, 10.25],[ 5.0, 3.6, 1.3, 0.25]])\n","\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SXU3HqrW5CSK","executionInfo":{"status":"ok","timestamp":1681846728908,"user_tz":-180,"elapsed":929,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"ba753645-8f32-4232-d305-44083a3c5bca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["[1 1 1 1 1 0 0 0 0 0 2 2 2 2 2]\n","[0 0 0 0 0 1 1 1 1 1 2 2 2 2 2]\n","[2 1]\n"]}]},{"cell_type":"markdown","source":["Метрики"],"metadata":{"id":"XSsnpXHg5MYN"}},{"cell_type":"code","source":["from sklearn import metrics\n","#внутренняя метрика\n","print(metrics.silhouette_score(iris.data, k_means.labels_))\n","#внешняя метрика\n","print(metrics.adjusted_rand_score(iris.target, k_means.labels_))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jN-px7lz5Ms3","executionInfo":{"status":"ok","timestamp":1681846731137,"user_tz":-180,"elapsed":288,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"343a091b-68f3-4bd9-988b-2ddad56e8d11"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.5528190123564095\n","0.7302382722834697\n"]}]},{"cell_type":"markdown","source":["ДОПОЛНИТЕЛЬНОЕ ЗАДАНИЕ\n","\n","Чтение данных из csv-файла (xlsx-файла) в DataFrame "],"metadata":{"id":"YguYfWZaAOeP"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","data = pd.read_excel(\"/content/sample_data/heart.xlsx\")\n","df = pd.DataFrame(data)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":302},"id":"0c0pO4K09NdD","executionInfo":{"status":"ok","timestamp":1681846760913,"user_tz":-180,"elapsed":423,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"64291a5b-d6b3-4643-d4c1-fc9ea8bbc0e5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age         sex  chest pain type  resting blood pressure  \\\n","0        70.0  1.0              4.0                   130.0   \n","1        67.0  0.0              3.0                   115.0   \n","2        57.0  1.0              2.0                   124.0   \n","3        64.0  1.0              4.0                   128.0   \n","4        74.0  0.0              2.0                   120.0   \n","\n","   serum cholestoral in mg/dl  fasting blood sugar > 120 mg/dl  \\\n","0                       322.0                              0.0   \n","1                       564.0                              0.0   \n","2                       261.0                              0.0   \n","3                       263.0                              0.0   \n","4                       269.0                              0.0   \n","\n","   resting electrocardiographic results  maximum heart rate achieved  \\\n","0                                   2.0                        109.0   \n","1                                   2.0                        160.0   \n","2                                   0.0                        141.0   \n","3                                   0.0                        105.0   \n","4                                   2.0                        121.0   \n","\n","   exercise induced angina  \\\n","0                      0.0   \n","1                      0.0   \n","2                      0.0   \n","3                      1.0   \n","4                      1.0   \n","\n","   oldpeak = ST depression induced by exercise relative to rest  \\\n","0                                                2.4              \n","1                                                1.6              \n","2                                                0.3              \n","3                                                0.2              \n","4                                                0.2              \n","\n","   the slope of the peak exercise ST segment  \\\n","0                                        2.0   \n","1                                        2.0   \n","2                                        1.0   \n","3                                        2.0   \n","4                                        1.0   \n","\n","   number of major vessels (0-3) colored by flourosopy  thal  heart disease  \n","0                                                3.0     3.0              2  \n","1                                                0.0     7.0              1  \n","2                                                0.0     7.0              2  \n","3                                                1.0     7.0              1  \n","4                                                1.0     3.0              1  "],"text/html":["\n","  <div id=\"df-8e68d870-4032-4186-999d-573c3002c42d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>chest pain type</th>\n","      <th>resting blood pressure</th>\n","      <th>serum cholestoral in mg/dl</th>\n","      <th>fasting blood sugar &gt; 120 mg/dl</th>\n","      <th>resting electrocardiographic results</th>\n","      <th>maximum heart rate achieved</th>\n","      <th>exercise induced angina</th>\n","      <th>oldpeak = ST depression induced by exercise relative to rest</th>\n","      <th>the slope of the peak exercise ST segment</th>\n","      <th>number of major vessels (0-3) colored by flourosopy</th>\n","      <th>thal</th>\n","      <th>heart disease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>70.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>130.0</td>\n","      <td>322.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>109.0</td>\n","      <td>0.0</td>\n","      <td>2.4</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>67.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>115.0</td>\n","      <td>564.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>160.0</td>\n","      <td>0.0</td>\n","      <td>1.6</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>57.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>124.0</td>\n","      <td>261.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>141.0</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>64.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>128.0</td>\n","      <td>263.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>105.0</td>\n","      <td>1.0</td>\n","      <td>0.2</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>7.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>74.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>120.0</td>\n","      <td>269.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>121.0</td>\n","      <td>1.0</td>\n","      <td>0.2</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e68d870-4032-4186-999d-573c3002c42d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8e68d870-4032-4186-999d-573c3002c42d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8e68d870-4032-4186-999d-573c3002c42d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["Формирование обучающего датасета"],"metadata":{"id":"panm76UHFGmn"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X = df.iloc[:, :].values\n","y = df['heart disease']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=43, stratify=y, shuffle=True)"],"metadata":{"id":"xyr1h_OG-wv2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Создание модели классификации «Случайный лес» и ее обучение"],"metadata":{"id":"zGb1qruFFJGh"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","\n","model = RandomForestClassifier()\n","\n","model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"Yf4Q7LzhFK1-","executionInfo":{"status":"ok","timestamp":1681858540057,"user_tz":-180,"elapsed":242,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"6a251a00-27b4-47ae-8d58-a6c26bbca3ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier()"],"text/html":["<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["Предсказание, больное ли сердце у человека или нет"],"metadata":{"id":"8NKDtZyZFNcg"}},{"cell_type":"code","source":["model.predict(X_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wmhkfWyVFjTG","executionInfo":{"status":"ok","timestamp":1681858541350,"user_tz":-180,"elapsed":241,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"acf78611-03d0-4530-b099-4b9ef9142166"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n","       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n","       0, 0, 1, 1, 0])"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["import pickle\n","\n","#сохранение модели в строке\n","\n","s = pickle.dumps(model)\n","\n","model_new = pickle.loads(s)\n","\n","model_new.predict(X_test)\n","\n"," \n","\n","#сохранение модели в файле\n","\n","import joblib\n","\n","joblib.dump(model, '/content/sample_data/filename.pkl')\n","\n","#загрузка модели\n","\n","model_new = joblib.load('/content/sample_data/filename.pkl')"],"metadata":{"id":"ukHKGOngKPrY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["ДОПОЛНИТЕЛЬНОЕ ЗАДАНИЕ\n","\n","Задача классификации на основе случайного леса"],"metadata":{"id":"x-TZAHNB_t0Y"}},{"cell_type":"code","source":["import pandas as pd\n","\n","df = pd.read_csv('/content/sample_data/parkinsons.data')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"b5HfmwDo_3mv","executionInfo":{"status":"ok","timestamp":1681851479831,"user_tz":-180,"elapsed":384,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"eeb727b8-1e37-4e07-cfd7-9e92f41901ff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             name  MDVP:Fo(Hz)  MDVP:Fhi(Hz)  MDVP:Flo(Hz)  MDVP:Jitter(%)  \\\n","0  phon_R01_S01_1      119.992       157.302        74.997         0.00784   \n","1  phon_R01_S01_2      122.400       148.650       113.819         0.00968   \n","2  phon_R01_S01_3      116.682       131.111       111.555         0.01050   \n","3  phon_R01_S01_4      116.676       137.871       111.366         0.00997   \n","4  phon_R01_S01_5      116.014       141.781       110.655         0.01284   \n","\n","   MDVP:Jitter(Abs)  MDVP:RAP  MDVP:PPQ  Jitter:DDP  MDVP:Shimmer  ...  \\\n","0           0.00007   0.00370   0.00554     0.01109       0.04374  ...   \n","1           0.00008   0.00465   0.00696     0.01394       0.06134  ...   \n","2           0.00009   0.00544   0.00781     0.01633       0.05233  ...   \n","3           0.00009   0.00502   0.00698     0.01505       0.05492  ...   \n","4           0.00011   0.00655   0.00908     0.01966       0.06425  ...   \n","\n","   Shimmer:DDA      NHR     HNR  status      RPDE       DFA   spread1  \\\n","0      0.06545  0.02211  21.033       1  0.414783  0.815285 -4.813031   \n","1      0.09403  0.01929  19.085       1  0.458359  0.819521 -4.075192   \n","2      0.08270  0.01309  20.651       1  0.429895  0.825288 -4.443179   \n","3      0.08771  0.01353  20.644       1  0.434969  0.819235 -4.117501   \n","4      0.10470  0.01767  19.649       1  0.417356  0.823484 -3.747787   \n","\n","    spread2        D2       PPE  \n","0  0.266482  2.301442  0.284654  \n","1  0.335590  2.486855  0.368674  \n","2  0.311173  2.342259  0.332634  \n","3  0.334147  2.405554  0.368975  \n","4  0.234513  2.332180  0.410335  \n","\n","[5 rows x 24 columns]"],"text/html":["\n","  <div id=\"df-1e1da3c7-c865-4422-93fd-480cc5991701\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>MDVP:Fo(Hz)</th>\n","      <th>MDVP:Fhi(Hz)</th>\n","      <th>MDVP:Flo(Hz)</th>\n","      <th>MDVP:Jitter(%)</th>\n","      <th>MDVP:Jitter(Abs)</th>\n","      <th>MDVP:RAP</th>\n","      <th>MDVP:PPQ</th>\n","      <th>Jitter:DDP</th>\n","      <th>MDVP:Shimmer</th>\n","      <th>...</th>\n","      <th>Shimmer:DDA</th>\n","      <th>NHR</th>\n","      <th>HNR</th>\n","      <th>status</th>\n","      <th>RPDE</th>\n","      <th>DFA</th>\n","      <th>spread1</th>\n","      <th>spread2</th>\n","      <th>D2</th>\n","      <th>PPE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>phon_R01_S01_1</td>\n","      <td>119.992</td>\n","      <td>157.302</td>\n","      <td>74.997</td>\n","      <td>0.00784</td>\n","      <td>0.00007</td>\n","      <td>0.00370</td>\n","      <td>0.00554</td>\n","      <td>0.01109</td>\n","      <td>0.04374</td>\n","      <td>...</td>\n","      <td>0.06545</td>\n","      <td>0.02211</td>\n","      <td>21.033</td>\n","      <td>1</td>\n","      <td>0.414783</td>\n","      <td>0.815285</td>\n","      <td>-4.813031</td>\n","      <td>0.266482</td>\n","      <td>2.301442</td>\n","      <td>0.284654</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>phon_R01_S01_2</td>\n","      <td>122.400</td>\n","      <td>148.650</td>\n","      <td>113.819</td>\n","      <td>0.00968</td>\n","      <td>0.00008</td>\n","      <td>0.00465</td>\n","      <td>0.00696</td>\n","      <td>0.01394</td>\n","      <td>0.06134</td>\n","      <td>...</td>\n","      <td>0.09403</td>\n","      <td>0.01929</td>\n","      <td>19.085</td>\n","      <td>1</td>\n","      <td>0.458359</td>\n","      <td>0.819521</td>\n","      <td>-4.075192</td>\n","      <td>0.335590</td>\n","      <td>2.486855</td>\n","      <td>0.368674</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>phon_R01_S01_3</td>\n","      <td>116.682</td>\n","      <td>131.111</td>\n","      <td>111.555</td>\n","      <td>0.01050</td>\n","      <td>0.00009</td>\n","      <td>0.00544</td>\n","      <td>0.00781</td>\n","      <td>0.01633</td>\n","      <td>0.05233</td>\n","      <td>...</td>\n","      <td>0.08270</td>\n","      <td>0.01309</td>\n","      <td>20.651</td>\n","      <td>1</td>\n","      <td>0.429895</td>\n","      <td>0.825288</td>\n","      <td>-4.443179</td>\n","      <td>0.311173</td>\n","      <td>2.342259</td>\n","      <td>0.332634</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>phon_R01_S01_4</td>\n","      <td>116.676</td>\n","      <td>137.871</td>\n","      <td>111.366</td>\n","      <td>0.00997</td>\n","      <td>0.00009</td>\n","      <td>0.00502</td>\n","      <td>0.00698</td>\n","      <td>0.01505</td>\n","      <td>0.05492</td>\n","      <td>...</td>\n","      <td>0.08771</td>\n","      <td>0.01353</td>\n","      <td>20.644</td>\n","      <td>1</td>\n","      <td>0.434969</td>\n","      <td>0.819235</td>\n","      <td>-4.117501</td>\n","      <td>0.334147</td>\n","      <td>2.405554</td>\n","      <td>0.368975</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>phon_R01_S01_5</td>\n","      <td>116.014</td>\n","      <td>141.781</td>\n","      <td>110.655</td>\n","      <td>0.01284</td>\n","      <td>0.00011</td>\n","      <td>0.00655</td>\n","      <td>0.00908</td>\n","      <td>0.01966</td>\n","      <td>0.06425</td>\n","      <td>...</td>\n","      <td>0.10470</td>\n","      <td>0.01767</td>\n","      <td>19.649</td>\n","      <td>1</td>\n","      <td>0.417356</td>\n","      <td>0.823484</td>\n","      <td>-3.747787</td>\n","      <td>0.234513</td>\n","      <td>2.332180</td>\n","      <td>0.410335</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 24 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e1da3c7-c865-4422-93fd-480cc5991701')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1e1da3c7-c865-4422-93fd-480cc5991701 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1e1da3c7-c865-4422-93fd-480cc5991701');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["Уберём незначащие столбцы"],"metadata":{"id":"oj81NK3cWqe8"}},{"cell_type":"code","source":["X = df.drop('status', axis = 1)\n","X = X.iloc[:, 1:]\n","y = df['status']\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"uXsuxhMvU_SP","executionInfo":{"status":"ok","timestamp":1681854622545,"user_tz":-180,"elapsed":273,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"307e10bb-d9b8-4fe6-94ba-e7e0ba6aef10"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     MDVP:Fo(Hz)  MDVP:Fhi(Hz)  MDVP:Flo(Hz)  MDVP:Jitter(%)  \\\n","0        119.992       157.302        74.997         0.00784   \n","1        122.400       148.650       113.819         0.00968   \n","2        116.682       131.111       111.555         0.01050   \n","3        116.676       137.871       111.366         0.00997   \n","4        116.014       141.781       110.655         0.01284   \n","..           ...           ...           ...             ...   \n","190      174.188       230.978        94.261         0.00459   \n","191      209.516       253.017        89.488         0.00564   \n","192      174.688       240.005        74.287         0.01360   \n","193      198.764       396.961        74.904         0.00740   \n","194      214.289       260.277        77.973         0.00567   \n","\n","     MDVP:Jitter(Abs)  MDVP:RAP  MDVP:PPQ  Jitter:DDP  MDVP:Shimmer  \\\n","0             0.00007   0.00370   0.00554     0.01109       0.04374   \n","1             0.00008   0.00465   0.00696     0.01394       0.06134   \n","2             0.00009   0.00544   0.00781     0.01633       0.05233   \n","3             0.00009   0.00502   0.00698     0.01505       0.05492   \n","4             0.00011   0.00655   0.00908     0.01966       0.06425   \n","..                ...       ...       ...         ...           ...   \n","190           0.00003   0.00263   0.00259     0.00790       0.04087   \n","191           0.00003   0.00331   0.00292     0.00994       0.02751   \n","192           0.00008   0.00624   0.00564     0.01873       0.02308   \n","193           0.00004   0.00370   0.00390     0.01109       0.02296   \n","194           0.00003   0.00295   0.00317     0.00885       0.01884   \n","\n","     MDVP:Shimmer(dB)  ...  MDVP:APQ  Shimmer:DDA      NHR     HNR      RPDE  \\\n","0               0.426  ...   0.02971      0.06545  0.02211  21.033  0.414783   \n","1               0.626  ...   0.04368      0.09403  0.01929  19.085  0.458359   \n","2               0.482  ...   0.03590      0.08270  0.01309  20.651  0.429895   \n","3               0.517  ...   0.03772      0.08771  0.01353  20.644  0.434969   \n","4               0.584  ...   0.04465      0.10470  0.01767  19.649  0.417356   \n","..                ...  ...       ...          ...      ...     ...       ...   \n","190             0.405  ...   0.02745      0.07008  0.02764  19.517  0.448439   \n","191             0.263  ...   0.01879      0.04812  0.01810  19.147  0.431674   \n","192             0.256  ...   0.01667      0.03804  0.10715  17.883  0.407567   \n","193             0.241  ...   0.01588      0.03794  0.07223  19.020  0.451221   \n","194             0.190  ...   0.01373      0.03078  0.04398  21.209  0.462803   \n","\n","          DFA   spread1   spread2        D2       PPE  \n","0    0.815285 -4.813031  0.266482  2.301442  0.284654  \n","1    0.819521 -4.075192  0.335590  2.486855  0.368674  \n","2    0.825288 -4.443179  0.311173  2.342259  0.332634  \n","3    0.819235 -4.117501  0.334147  2.405554  0.368975  \n","4    0.823484 -3.747787  0.234513  2.332180  0.410335  \n","..        ...       ...       ...       ...       ...  \n","190  0.657899 -6.538586  0.121952  2.657476  0.133050  \n","191  0.683244 -6.195325  0.129303  2.784312  0.168895  \n","192  0.655683 -6.787197  0.158453  2.679772  0.131728  \n","193  0.643956 -6.744577  0.207454  2.138608  0.123306  \n","194  0.664357 -5.724056  0.190667  2.555477  0.148569  \n","\n","[195 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-b8fd7f0b-05ef-4b9e-83da-133da26c0e77\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MDVP:Fo(Hz)</th>\n","      <th>MDVP:Fhi(Hz)</th>\n","      <th>MDVP:Flo(Hz)</th>\n","      <th>MDVP:Jitter(%)</th>\n","      <th>MDVP:Jitter(Abs)</th>\n","      <th>MDVP:RAP</th>\n","      <th>MDVP:PPQ</th>\n","      <th>Jitter:DDP</th>\n","      <th>MDVP:Shimmer</th>\n","      <th>MDVP:Shimmer(dB)</th>\n","      <th>...</th>\n","      <th>MDVP:APQ</th>\n","      <th>Shimmer:DDA</th>\n","      <th>NHR</th>\n","      <th>HNR</th>\n","      <th>RPDE</th>\n","      <th>DFA</th>\n","      <th>spread1</th>\n","      <th>spread2</th>\n","      <th>D2</th>\n","      <th>PPE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>119.992</td>\n","      <td>157.302</td>\n","      <td>74.997</td>\n","      <td>0.00784</td>\n","      <td>0.00007</td>\n","      <td>0.00370</td>\n","      <td>0.00554</td>\n","      <td>0.01109</td>\n","      <td>0.04374</td>\n","      <td>0.426</td>\n","      <td>...</td>\n","      <td>0.02971</td>\n","      <td>0.06545</td>\n","      <td>0.02211</td>\n","      <td>21.033</td>\n","      <td>0.414783</td>\n","      <td>0.815285</td>\n","      <td>-4.813031</td>\n","      <td>0.266482</td>\n","      <td>2.301442</td>\n","      <td>0.284654</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>122.400</td>\n","      <td>148.650</td>\n","      <td>113.819</td>\n","      <td>0.00968</td>\n","      <td>0.00008</td>\n","      <td>0.00465</td>\n","      <td>0.00696</td>\n","      <td>0.01394</td>\n","      <td>0.06134</td>\n","      <td>0.626</td>\n","      <td>...</td>\n","      <td>0.04368</td>\n","      <td>0.09403</td>\n","      <td>0.01929</td>\n","      <td>19.085</td>\n","      <td>0.458359</td>\n","      <td>0.819521</td>\n","      <td>-4.075192</td>\n","      <td>0.335590</td>\n","      <td>2.486855</td>\n","      <td>0.368674</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>116.682</td>\n","      <td>131.111</td>\n","      <td>111.555</td>\n","      <td>0.01050</td>\n","      <td>0.00009</td>\n","      <td>0.00544</td>\n","      <td>0.00781</td>\n","      <td>0.01633</td>\n","      <td>0.05233</td>\n","      <td>0.482</td>\n","      <td>...</td>\n","      <td>0.03590</td>\n","      <td>0.08270</td>\n","      <td>0.01309</td>\n","      <td>20.651</td>\n","      <td>0.429895</td>\n","      <td>0.825288</td>\n","      <td>-4.443179</td>\n","      <td>0.311173</td>\n","      <td>2.342259</td>\n","      <td>0.332634</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>116.676</td>\n","      <td>137.871</td>\n","      <td>111.366</td>\n","      <td>0.00997</td>\n","      <td>0.00009</td>\n","      <td>0.00502</td>\n","      <td>0.00698</td>\n","      <td>0.01505</td>\n","      <td>0.05492</td>\n","      <td>0.517</td>\n","      <td>...</td>\n","      <td>0.03772</td>\n","      <td>0.08771</td>\n","      <td>0.01353</td>\n","      <td>20.644</td>\n","      <td>0.434969</td>\n","      <td>0.819235</td>\n","      <td>-4.117501</td>\n","      <td>0.334147</td>\n","      <td>2.405554</td>\n","      <td>0.368975</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>116.014</td>\n","      <td>141.781</td>\n","      <td>110.655</td>\n","      <td>0.01284</td>\n","      <td>0.00011</td>\n","      <td>0.00655</td>\n","      <td>0.00908</td>\n","      <td>0.01966</td>\n","      <td>0.06425</td>\n","      <td>0.584</td>\n","      <td>...</td>\n","      <td>0.04465</td>\n","      <td>0.10470</td>\n","      <td>0.01767</td>\n","      <td>19.649</td>\n","      <td>0.417356</td>\n","      <td>0.823484</td>\n","      <td>-3.747787</td>\n","      <td>0.234513</td>\n","      <td>2.332180</td>\n","      <td>0.410335</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>190</th>\n","      <td>174.188</td>\n","      <td>230.978</td>\n","      <td>94.261</td>\n","      <td>0.00459</td>\n","      <td>0.00003</td>\n","      <td>0.00263</td>\n","      <td>0.00259</td>\n","      <td>0.00790</td>\n","      <td>0.04087</td>\n","      <td>0.405</td>\n","      <td>...</td>\n","      <td>0.02745</td>\n","      <td>0.07008</td>\n","      <td>0.02764</td>\n","      <td>19.517</td>\n","      <td>0.448439</td>\n","      <td>0.657899</td>\n","      <td>-6.538586</td>\n","      <td>0.121952</td>\n","      <td>2.657476</td>\n","      <td>0.133050</td>\n","    </tr>\n","    <tr>\n","      <th>191</th>\n","      <td>209.516</td>\n","      <td>253.017</td>\n","      <td>89.488</td>\n","      <td>0.00564</td>\n","      <td>0.00003</td>\n","      <td>0.00331</td>\n","      <td>0.00292</td>\n","      <td>0.00994</td>\n","      <td>0.02751</td>\n","      <td>0.263</td>\n","      <td>...</td>\n","      <td>0.01879</td>\n","      <td>0.04812</td>\n","      <td>0.01810</td>\n","      <td>19.147</td>\n","      <td>0.431674</td>\n","      <td>0.683244</td>\n","      <td>-6.195325</td>\n","      <td>0.129303</td>\n","      <td>2.784312</td>\n","      <td>0.168895</td>\n","    </tr>\n","    <tr>\n","      <th>192</th>\n","      <td>174.688</td>\n","      <td>240.005</td>\n","      <td>74.287</td>\n","      <td>0.01360</td>\n","      <td>0.00008</td>\n","      <td>0.00624</td>\n","      <td>0.00564</td>\n","      <td>0.01873</td>\n","      <td>0.02308</td>\n","      <td>0.256</td>\n","      <td>...</td>\n","      <td>0.01667</td>\n","      <td>0.03804</td>\n","      <td>0.10715</td>\n","      <td>17.883</td>\n","      <td>0.407567</td>\n","      <td>0.655683</td>\n","      <td>-6.787197</td>\n","      <td>0.158453</td>\n","      <td>2.679772</td>\n","      <td>0.131728</td>\n","    </tr>\n","    <tr>\n","      <th>193</th>\n","      <td>198.764</td>\n","      <td>396.961</td>\n","      <td>74.904</td>\n","      <td>0.00740</td>\n","      <td>0.00004</td>\n","      <td>0.00370</td>\n","      <td>0.00390</td>\n","      <td>0.01109</td>\n","      <td>0.02296</td>\n","      <td>0.241</td>\n","      <td>...</td>\n","      <td>0.01588</td>\n","      <td>0.03794</td>\n","      <td>0.07223</td>\n","      <td>19.020</td>\n","      <td>0.451221</td>\n","      <td>0.643956</td>\n","      <td>-6.744577</td>\n","      <td>0.207454</td>\n","      <td>2.138608</td>\n","      <td>0.123306</td>\n","    </tr>\n","    <tr>\n","      <th>194</th>\n","      <td>214.289</td>\n","      <td>260.277</td>\n","      <td>77.973</td>\n","      <td>0.00567</td>\n","      <td>0.00003</td>\n","      <td>0.00295</td>\n","      <td>0.00317</td>\n","      <td>0.00885</td>\n","      <td>0.01884</td>\n","      <td>0.190</td>\n","      <td>...</td>\n","      <td>0.01373</td>\n","      <td>0.03078</td>\n","      <td>0.04398</td>\n","      <td>21.209</td>\n","      <td>0.462803</td>\n","      <td>0.664357</td>\n","      <td>-5.724056</td>\n","      <td>0.190667</td>\n","      <td>2.555477</td>\n","      <td>0.148569</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>195 rows × 22 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8fd7f0b-05ef-4b9e-83da-133da26c0e77')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b8fd7f0b-05ef-4b9e-83da-133da26c0e77 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b8fd7f0b-05ef-4b9e-83da-133da26c0e77');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["Нормализуем входные значения\n"],"metadata":{"id":"zZ5G1EwzOH9s"}},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler\n","\n","scaler=MinMaxScaler((-1,1))\n","\n","x=scaler.fit_transform(X)"],"metadata":{"id":"ONDGw49RKPQV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Делим датасет на выборки для обучения и тестирования"],"metadata":{"id":"XL_KBO8_Yinh"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test=train_test_split(X, y, test_size=0.25, random_state=25)"],"metadata":{"id":"kBGE7SE5Zt0M"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Обучаем модель"],"metadata":{"id":"Pnj5JkOGZ3h4"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","\n","model = RandomForestClassifier()\n","\n","model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"ZpH0uKjYZ5il","executionInfo":{"status":"ok","timestamp":1681858396605,"user_tz":-180,"elapsed":635,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"77117a3f-a2e0-4bc6-a89c-5c250c913cbf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier()"],"text/html":["<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["Проверяем качество обученной модели "],"metadata":{"id":"r2jc7VkecBKo"}},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","\n","model_pred = model.predict(X_test)\n","\n","print(accuracy_score(y_test, model_pred) * 100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PbpBxx4zcHgT","executionInfo":{"status":"ok","timestamp":1681858398284,"user_tz":-180,"elapsed":262,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"16f78e68-0fbb-46e9-b6cd-90c0829e59c1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["79.59183673469387\n"]}]},{"cell_type":"markdown","source":["Задача регресии на основе лассо"],"metadata":{"id":"UFmXGS32ahLY"}},{"cell_type":"code","source":["from sklearn.linear_model import Lasso\n","from sklearn.model_selection import train_test_split\n","import pandas as pd\n","from sklearn.metrics import mean_squared_error\n","\n","\n","df = pd.read_excel('/content/sample_data/heart.xlsx')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":302},"id":"v7C_KFqJlumV","executionInfo":{"status":"ok","timestamp":1681930771493,"user_tz":-180,"elapsed":382,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"322caea2-2ae7-4002-c0dd-993850f01e6a"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age         sex  chest pain type  resting blood pressure  \\\n","0        70.0  1.0              4.0                   130.0   \n","1        67.0  0.0              3.0                   115.0   \n","2        57.0  1.0              2.0                   124.0   \n","3        64.0  1.0              4.0                   128.0   \n","4        74.0  0.0              2.0                   120.0   \n","\n","   serum cholestoral in mg/dl  fasting blood sugar > 120 mg/dl  \\\n","0                       322.0                              0.0   \n","1                       564.0                              0.0   \n","2                       261.0                              0.0   \n","3                       263.0                              0.0   \n","4                       269.0                              0.0   \n","\n","   resting electrocardiographic results  maximum heart rate achieved  \\\n","0                                   2.0                        109.0   \n","1                                   2.0                        160.0   \n","2                                   0.0                        141.0   \n","3                                   0.0                        105.0   \n","4                                   2.0                        121.0   \n","\n","   exercise induced angina  \\\n","0                      0.0   \n","1                      0.0   \n","2                      0.0   \n","3                      1.0   \n","4                      1.0   \n","\n","   oldpeak = ST depression induced by exercise relative to rest  \\\n","0                                                2.4              \n","1                                                1.6              \n","2                                                0.3              \n","3                                                0.2              \n","4                                                0.2              \n","\n","   the slope of the peak exercise ST segment  \\\n","0                                        2.0   \n","1                                        2.0   \n","2                                        1.0   \n","3                                        2.0   \n","4                                        1.0   \n","\n","   number of major vessels (0-3) colored by flourosopy  thal  heart disease  \n","0                                                3.0     3.0              2  \n","1                                                0.0     7.0              1  \n","2                                                0.0     7.0              2  \n","3                                                1.0     7.0              1  \n","4                                                1.0     3.0              1  "],"text/html":["\n","  <div id=\"df-461a1cb9-59c5-49c1-a633-5f20c46bee13\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>chest pain type</th>\n","      <th>resting blood pressure</th>\n","      <th>serum cholestoral in mg/dl</th>\n","      <th>fasting blood sugar &gt; 120 mg/dl</th>\n","      <th>resting electrocardiographic results</th>\n","      <th>maximum heart rate achieved</th>\n","      <th>exercise induced angina</th>\n","      <th>oldpeak = ST depression induced by exercise relative to rest</th>\n","      <th>the slope of the peak exercise ST segment</th>\n","      <th>number of major vessels (0-3) colored by flourosopy</th>\n","      <th>thal</th>\n","      <th>heart disease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>70.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>130.0</td>\n","      <td>322.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>109.0</td>\n","      <td>0.0</td>\n","      <td>2.4</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>67.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>115.0</td>\n","      <td>564.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>160.0</td>\n","      <td>0.0</td>\n","      <td>1.6</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>57.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>124.0</td>\n","      <td>261.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>141.0</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>64.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>128.0</td>\n","      <td>263.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>105.0</td>\n","      <td>1.0</td>\n","      <td>0.2</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>7.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>74.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>120.0</td>\n","      <td>269.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>121.0</td>\n","      <td>1.0</td>\n","      <td>0.2</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-461a1cb9-59c5-49c1-a633-5f20c46bee13')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-461a1cb9-59c5-49c1-a633-5f20c46bee13 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-461a1cb9-59c5-49c1-a633-5f20c46bee13');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["X = df.drop('heart disease', axis = 1)\n","X = X.iloc[:, 1:]\n","y = df['heart disease']\n","\n","X_train, X_test, y_train, y_test=train_test_split(X, y, test_size=0.25, random_state=25)\n","\n","clf = Lasso(alpha=0.1)\n","\n","clf.fit(X_train, y_train)\n","\n","clf_pred = clf.predict(X_test)\n"],"metadata":{"id":"FuMv6dBolwdu","executionInfo":{"status":"ok","timestamp":1681930357939,"user_tz":-180,"elapsed":2,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}}},"execution_count":21,"outputs":[]},{"cell_type":"markdown","source":["Получим коэффициенты значемости признаков"],"metadata":{"id":"pCfbyoFs4zKl"}},{"cell_type":"code","source":["importance = pd.Series(data=clf.coef_, index=X.columns)\n","importance_sorted = importance.abs().sort_values(ascending=False)\n","print(importance_sorted)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ayGnAsquuLiV","executionInfo":{"status":"ok","timestamp":1681930361816,"user_tz":-180,"elapsed":534,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"72cc3636-788f-4d6f-f1a5-fc9df5cc4b51"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["number of major vessels (0-3) colored by flourosopy             0.174329\n","thal                                                            0.099500\n","oldpeak = ST depression induced by exercise relative to rest    0.043783\n","resting blood pressure                                          0.002834\n","maximum heart rate achieved                                     0.001217\n","serum cholestoral in mg/dl                                      0.000812\n","sex                                                             0.000000\n","chest pain type                                                 0.000000\n","fasting blood sugar > 120 mg/dl                                 0.000000\n","resting electrocardiographic results                            0.000000\n","exercise induced angina                                         0.000000\n","the slope of the peak exercise ST segment                       0.000000\n","dtype: float64\n"]}]},{"cell_type":"markdown","source":["Вычисляем метрику MSE. Эта метрика измеряет среднеквадратичное отклонение предсказанных значений от истинных значений целевой переменной, и чем меньше значение MSE, тем лучше"],"metadata":{"id":"drNE3jy85jOX"}},{"cell_type":"code","source":["mse = mean_squared_error(y_test, clf_pred)\n","print(\"MSE: \", mse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w-rSeijZ4--H","executionInfo":{"status":"ok","timestamp":1681930856400,"user_tz":-180,"elapsed":2,"user":{"displayName":"Gc Jaster","userId":"08478990750520798031"}},"outputId":"b4f4a352-e724-46a3-a1e9-69b3361a4a71"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE:  0.22750061613828945\n"]}]}]}